{"version":3,"file":"0.54be9b2b40b16110ac85.hot-update.js","sources":["webpack:///src/components/spa/components/App.js"],"sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport actions from '../redux/actions'\n\nclass App extends Component{\n\tconstructor(props, context){\n\t\tsuper(props, context)\n\t\tthis.state = {\n\t\t\tinputText: 'App here'\n\t\t}\n\t}\n\thandleChange(e){\n\t\tthis.setState({\n\t\t\tinputText: e.target.value\n\t\t})\n\t}\n\thandleSubmit(e){\n\t\te.preventDefault()\n\t\tconsole.log('xxx')\n\t\tthis.props.dispatch(actions.renderText(this.state.inputText))\n\t}\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<p>state was initial from App: {this.state.inputText}</p>\n\t\t\t\t<p>state will be changed. Data get from a Object at Client. Process at Store. Connect by Dispatch. Solution will be process at Actions. Result:</p>\n\t\t\t\t<ul>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.todos.map(todo=>{\n\t\t\t\t\t\t\treturn <li key={todo.id}>{todo.text}</li>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</ul>\n\t\t\t\t<input type=\"text\" value={this.state.inputText} onChange={this.handleChange.bind(this)}/>\n\t\t\t\t<button onClick={this.handleSubmit.bind(this)}>Submit</button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapStateToProps(state){\n\treturn state;\n}\n\n// function mapDispatchToProps(dispatch){\n// \treturn{\n// \t\tactions: bindActionCreators(actions, dispatch)\n// \t}\n// }\n\n// export default connect(mapStateToProps,mapDispatchToProps)(App)\n\nexport default connect(mapStateToProps)(App)\n\n\n// WEBPACK FOOTER //\n// src/components/spa/components/App.js"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;;;;;;;;;;;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AAAA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAXA;AAcA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}